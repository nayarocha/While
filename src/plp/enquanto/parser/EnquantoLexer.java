// Generated from Enquanto.g4 by ANTLR 4.4
package plp.enquanto.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class EnquantoLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__29=1, T__28=2, T__27=3, T__26=4, T__25=5, T__24=6, T__23=7, T__22=8, 
		T__21=9, T__20=10, T__19=11, T__18=12, T__17=13, T__16=14, T__15=15, T__14=16, 
		T__13=17, T__12=18, T__11=19, T__10=20, T__9=21, T__8=22, T__7=23, T__6=24, 
		T__5=25, T__4=26, T__3=27, T__2=28, T__1=29, T__0=30, INT=31, ID=32, Texto=33, 
		Espaco=34;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'"
	};
	public static final String[] ruleNames = {
		"T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", 
		"T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", 
		"T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", 
		"T__4", "T__3", "T__2", "T__1", "T__0", "INT", "ID", "Texto", "Espaco"
	};


	public EnquantoLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Enquanto.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2$\u00d3\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b"+
		"\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3"+
		"\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37"+
		"\3\37\3\37\3 \6 \u00be\n \r \16 \u00bf\3!\6!\u00c3\n!\r!\16!\u00c4\3\""+
		"\3\"\7\"\u00c9\n\"\f\"\16\"\u00cc\13\"\3\"\3\"\3#\3#\3#\3#\3\u00ca\2$"+
		"\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$\3\2\3\5\2\13\f\17\17\"\"\u00d5\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2"+
		"\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2"+
		"\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2"+
		"\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2"+
		"\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\3G\3\2\2\2\5I\3\2\2\2\7K\3\2\2\2\tM"+
		"\3\2\2\2\13O\3\2\2\2\rQ\3\2\2\2\17S\3\2\2\2\21X\3\2\2\2\23[\3\2\2\2\25"+
		"^\3\2\2\2\27b\3\2\2\2\31h\3\2\2\2\33k\3\2\2\2\35m\3\2\2\2\37s\3\2\2\2"+
		"!u\3\2\2\2#{\3\2\2\2%\u0086\3\2\2\2\'\u0089\3\2\2\2)\u008f\3\2\2\2+\u0092"+
		"\3\2\2\2-\u0097\3\2\2\2/\u009b\3\2\2\2\61\u00a3\3\2\2\2\63\u00a6\3\2\2"+
		"\2\65\u00a8\3\2\2\2\67\u00b1\3\2\2\29\u00b3\3\2\2\2;\u00b5\3\2\2\2=\u00b7"+
		"\3\2\2\2?\u00bd\3\2\2\2A\u00c2\3\2\2\2C\u00c6\3\2\2\2E\u00cf\3\2\2\2G"+
		"H\7\61\2\2H\4\3\2\2\2IJ\7}\2\2J\6\3\2\2\2KL\7=\2\2L\b\3\2\2\2MN\7?\2\2"+
		"N\n\3\2\2\2OP\7\177\2\2P\f\3\2\2\2QR\7`\2\2R\16\3\2\2\2ST\7h\2\2TU\7c"+
		"\2\2UV\7e\2\2VW\7c\2\2W\20\3\2\2\2XY\7<\2\2YZ\7?\2\2Z\22\3\2\2\2[\\\7"+
		">\2\2\\]\7?\2\2]\24\3\2\2\2^_\7p\2\2_`\7c\2\2`a\7q\2\2a\26\3\2\2\2bc\7"+
		"h\2\2cd\7c\2\2de\7n\2\2ef\7u\2\2fg\7q\2\2g\30\3\2\2\2hi\7q\2\2ij\7w\2"+
		"\2j\32\3\2\2\2kl\7*\2\2l\34\3\2\2\2mn\7g\2\2no\7p\2\2op\7v\2\2pq\7c\2"+
		"\2qr\7q\2\2r\36\3\2\2\2st\7,\2\2t \3\2\2\2uv\7g\2\2vw\7z\2\2wx\7k\2\2"+
		"xy\7d\2\2yz\7c\2\2z\"\3\2\2\2{|\7x\2\2|}\7g\2\2}~\7t\2\2~\177\7f\2\2\177"+
		"\u0080\7c\2\2\u0080\u0081\7f\2\2\u0081\u0082\7g\2\2\u0082\u0083\7k\2\2"+
		"\u0083\u0084\7t\2\2\u0084\u0085\7q\2\2\u0085$\3\2\2\2\u0086\u0087\7u\2"+
		"\2\u0087\u0088\7g\2\2\u0088&\3\2\2\2\u0089\u008a\7u\2\2\u008a\u008b\7"+
		"g\2\2\u008b\u008c\7p\2\2\u008c\u008d\7c\2\2\u008d\u008e\7q\2\2\u008e("+
		"\3\2\2\2\u008f\u0090\7@\2\2\u0090\u0091\7?\2\2\u0091*\3\2\2\2\u0092\u0093"+
		"\7u\2\2\u0093\u0094\7m\2\2\u0094\u0095\7k\2\2\u0095\u0096\7r\2\2\u0096"+
		",\3\2\2\2\u0097\u0098\7z\2\2\u0098\u0099\7q\2\2\u0099\u009a\7t\2\2\u009a"+
		".\3\2\2\2\u009b\u009c\7g\2\2\u009c\u009d\7u\2\2\u009d\u009e\7e\2\2\u009e"+
		"\u009f\7t\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7x\2\2\u00a1\u00a2\7c\2\2"+
		"\u00a2\60\3\2\2\2\u00a3\u00a4\7>\2\2\u00a4\u00a5\7@\2\2\u00a5\62\3\2\2"+
		"\2\u00a6\u00a7\7g\2\2\u00a7\64\3\2\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa"+
		"\7p\2\2\u00aa\u00ab\7s\2\2\u00ab\u00ac\7w\2\2\u00ac\u00ad\7c\2\2\u00ad"+
		"\u00ae\7p\2\2\u00ae\u00af\7v\2\2\u00af\u00b0\7q\2\2\u00b0\66\3\2\2\2\u00b1"+
		"\u00b2\7+\2\2\u00b28\3\2\2\2\u00b3\u00b4\7-\2\2\u00b4:\3\2\2\2\u00b5\u00b6"+
		"\7/\2\2\u00b6<\3\2\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7g\2\2\u00b9\u00ba"+
		"\7k\2\2\u00ba\u00bb\7c\2\2\u00bb>\3\2\2\2\u00bc\u00be\4\62;\2\u00bd\u00bc"+
		"\3\2\2\2\u00be\u00bf\3\2\2\2\u00bf\u00bd\3\2\2\2\u00bf\u00c0\3\2\2\2\u00c0"+
		"@\3\2\2\2\u00c1\u00c3\4c|\2\u00c2\u00c1\3\2\2\2\u00c3\u00c4\3\2\2\2\u00c4"+
		"\u00c2\3\2\2\2\u00c4\u00c5\3\2\2\2\u00c5B\3\2\2\2\u00c6\u00ca\7$\2\2\u00c7"+
		"\u00c9\13\2\2\2\u00c8\u00c7\3\2\2\2\u00c9\u00cc\3\2\2\2\u00ca\u00cb\3"+
		"\2\2\2\u00ca\u00c8\3\2\2\2\u00cb\u00cd\3\2\2\2\u00cc\u00ca\3\2\2\2\u00cd"+
		"\u00ce\7$\2\2\u00ceD\3\2\2\2\u00cf\u00d0\t\2\2\2\u00d0\u00d1\3\2\2\2\u00d1"+
		"\u00d2\b#\2\2\u00d2F\3\2\2\2\6\2\u00bf\u00c4\u00ca\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}